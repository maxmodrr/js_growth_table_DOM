{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAe,SAAS,aAAa,CAAC,sBACtC,EAAkB,SAAS,aAAa,CAAC,yBACzC,EAAqB,SAAS,aAAa,CAAC,yBAC5C,EAAkB,SAAS,aAAa,CAAC,sBAE/C,SAAS,gBAAgB,CAAC,QAAS,WACjC,IAAM,EAAU,SAAS,aAAa,CAAC,MAAM,QAAQ,CAAC,MAAM,CACtD,EAAO,SAAS,gBAAgB,CAAC,MAAM,MAAM,AAE/C,AAAY,CAAA,KAAZ,EACF,EAAgB,YAAY,CAAC,WAAY,YAEzC,EAAgB,eAAe,CAAC,YAG9B,AAAY,IAAZ,EACF,EAAmB,YAAY,CAAC,WAAY,YAE5C,EAAmB,eAAe,CAAC,YAGjC,AAAS,KAAT,EACF,EAAa,YAAY,CAAC,WAAY,YAEtC,EAAa,eAAe,CAAC,YAG3B,AAAS,IAAT,EACF,EAAgB,YAAY,CAAC,WAAY,YAEzC,EAAgB,eAAe,CAAC,WAEpC,GAEA,EAAa,gBAAgB,CAAC,QAAS,WAIrC,IAAK,IAHC,EAAS,SAAS,aAAa,CAAC,MAChC,EAAW,SAAS,aAAa,CAAC,MAAM,QAAQ,CAAC,MAAM,CAEpD,EAAI,EAAG,EAAI,EAAU,IAAK,CACjC,IAAM,EAAS,SAAS,aAAa,CAAC,MAEtC,EAAO,MAAM,CAAC,EAChB,CACA,EAAM,MAAM,CAAC,EACf,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WAGxC,AAFW,SAAS,gBAAgB,CAAC,MAElC,OAAO,CAAC,SAAC,CAAZ,EACE,IAAM,EAAY,SAAS,aAAa,CAAC,MAEzC,EAAK,MAAM,CAAC,EACd,EACF,GAEA,EAAmB,gBAAgB,CAAC,QAAS,e,EAG3C,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFoB,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAEtC,OAAO,CAAC,SAAC,CAAjB,EACE,EAAK,WAAW,CAAC,EAAK,gBAAgB,CACxC,EACF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACxC,EAAM,WAAW,CAAC,EAAM,gBAAgB,CAC1C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar table = document.querySelector(\"tbody\");\nvar buttonAddRow = document.querySelector(\".append-row.button\");\nvar buttonAddColumn = document.querySelector(\".append-column.button\");\nvar buttonRemoveColumn = document.querySelector(\".remove-column.button\");\nvar buttonRemoveRow = document.querySelector(\".remove-row.button\");\ndocument.addEventListener(\"click\", function() {\n    var columns = document.querySelector(\"tr\").children.length;\n    var rows = document.querySelectorAll(\"tr\").length;\n    if (columns === 10) buttonAddColumn.setAttribute(\"disabled\", \"disabled\");\n    else buttonAddColumn.removeAttribute(\"disabled\");\n    if (columns === 2) buttonRemoveColumn.setAttribute(\"disabled\", \"disabled\");\n    else buttonRemoveColumn.removeAttribute(\"disabled\");\n    if (rows === 10) buttonAddRow.setAttribute(\"disabled\", \"disabled\");\n    else buttonAddRow.removeAttribute(\"disabled\");\n    if (rows === 2) buttonRemoveRow.setAttribute(\"disabled\", \"disabled\");\n    else buttonRemoveRow.removeAttribute(\"disabled\");\n});\nbuttonAddRow.addEventListener(\"click\", function() {\n    var newRow = document.createElement(\"tr\");\n    var rowCount = document.querySelector(\"tr\").children.length;\n    for(var i = 0; i < rowCount; i++){\n        var column = document.createElement(\"td\");\n        newRow.append(column);\n    }\n    table.append(newRow);\n});\nbuttonAddColumn.addEventListener(\"click\", function() {\n    var tr = document.querySelectorAll(\"tr\");\n    tr.forEach(function(elem) {\n        var newColumn = document.createElement(\"td\");\n        elem.append(newColumn);\n    });\n});\nbuttonRemoveColumn.addEventListener(\"click\", function() {\n    var columns = _to_consumable_array(document.querySelectorAll(\"tr\"));\n    columns.forEach(function(elem) {\n        elem.removeChild(elem.lastElementChild);\n    });\n});\nbuttonRemoveRow.addEventListener(\"click\", function() {\n    table.removeChild(table.lastElementChild);\n});\n\n//# sourceMappingURL=index.b1d2c0b7.js.map\n","'use strict';\n\n// write code here\nconst table = document.querySelector('tbody');\nconst buttonAddRow = document.querySelector('.append-row.button');\nconst buttonAddColumn = document.querySelector('.append-column.button');\nconst buttonRemoveColumn = document.querySelector('.remove-column.button');\nconst buttonRemoveRow = document.querySelector('.remove-row.button');\n\ndocument.addEventListener('click', () => {\n  const columns = document.querySelector('tr').children.length;\n  const rows = document.querySelectorAll('tr').length;\n\n  if (columns === 10) {\n    buttonAddColumn.setAttribute('disabled', 'disabled');\n  } else {\n    buttonAddColumn.removeAttribute('disabled');\n  }\n\n  if (columns === 2) {\n    buttonRemoveColumn.setAttribute('disabled', 'disabled');\n  } else {\n    buttonRemoveColumn.removeAttribute('disabled');\n  }\n\n  if (rows === 10) {\n    buttonAddRow.setAttribute('disabled', 'disabled');\n  } else {\n    buttonAddRow.removeAttribute('disabled');\n  }\n\n  if (rows === 2) {\n    buttonRemoveRow.setAttribute('disabled', 'disabled');\n  } else {\n    buttonRemoveRow.removeAttribute('disabled');\n  }\n});\n\nbuttonAddRow.addEventListener('click', () => {\n  const newRow = document.createElement('tr');\n  const rowCount = document.querySelector('tr').children.length;\n\n  for (let i = 0; i < rowCount; i++) {\n    const column = document.createElement('td');\n\n    newRow.append(column);\n  }\n  table.append(newRow);\n});\n\nbuttonAddColumn.addEventListener('click', () => {\n  const tr = document.querySelectorAll('tr');\n\n  tr.forEach((elem) => {\n    const newColumn = document.createElement('td');\n\n    elem.append(newColumn);\n  });\n});\n\nbuttonRemoveColumn.addEventListener('click', () => {\n  const columns = [...document.querySelectorAll('tr')];\n\n  columns.forEach((elem) => {\n    elem.removeChild(elem.lastElementChild);\n  });\n});\n\nbuttonRemoveRow.addEventListener('click', () => {\n  table.removeChild(table.lastElementChild);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","buttonAddRow","buttonAddColumn","buttonRemoveColumn","buttonRemoveRow","addEventListener","columns","children","rows","querySelectorAll","setAttribute","removeAttribute","newRow","createElement","rowCount","column","append","tr","forEach","elem","newColumn","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","removeChild","lastElementChild"],"version":3,"file":"index.b1d2c0b7.js.map"}